#spring.datasource.platform=postgresql
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.generate-ddl=false
#spring.jpa.hibernate.ddl-auto=update


#spring.datasource.url=jdbc:postgresql://localhost:5432/bookstore
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.datasource.initialization-mode=always

#spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
spring.datasource.username=sa
spring.datasource.password=sa
#spring.datasource.initialization-mode=always

spring.jpa.properties.jdbc.driverClassName=org.h2.Driver
#spring.jpa.properties.jdbc.url=jdbc:h2:mem:myDb;DB_CLOSE_DELAY=-1

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#spring.jpa.properties.hibernate.hbm2ddl.auto=create
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=false
logging.level.org.hibernate.SQL=DEBUG

#create SQL from Entity Metadata only, don't use scripts
spring.jpa.properties.javax.persistence.schema-generation.create-source=script

#Create SQL script from Entity
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=schema.sql

#Generate Database
spring.jpa.properties.javax.persistence.schema-generation.database.action=drop-and-create
spring.jpa.properties.javax.persistence.schema-generation.create-script-source=create.sql
spring.jpa.properties.javax.persistence.schema-generation.create-database-schemas=true
spring.jpa.properties.javax.persistence.schema-generation.create-database-tables=true

#Load Data
#spring.jpa.properties.javax.persistence.sql-load-script-source=data.sql
#
#server.port=8081
#server.servlet.context-path=/bookstore

# logging level
logging.level.org.springframework=ERROR
logging.level.com.realdolmen.bookstore = DEBUG

# output to a file
logging.file.name=app.log

# temp folder example
#logging.file=${java.io.tmpdir}/app.log

logging.pattern.file=%d %p %c{1.} [%t] %m%n

logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

## if no active profile, default is 'default'
##spring.profiles.active=prod

# root level
#logging.level.=INFO
